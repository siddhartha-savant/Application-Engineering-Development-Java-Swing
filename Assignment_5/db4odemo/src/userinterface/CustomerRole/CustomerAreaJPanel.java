/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Order.Order;
import Business.Restaurant.Restaurant;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class CustomerAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount account;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public CustomerAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system) {
        initComponents();
        
        this.account=account;
        this.userProcessContainer = userProcessContainer;
        this.system=system;
        valueLabel.setText("Welcome "+account.getName());
        populateRequestTable();
        pastTblPopulate();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) restaurantTable.getModel();
        model.setRowCount(0);
                Object[] row = new Object[3];
                //System.out.println();
                for(Restaurant restro:system.getRestaurantDirectory().getListOfRestaurants()){
                     row[0] = restro;
                     //System.out.println(restro.getAdminUName());
                     row[1] = restro.getAddress();
                     row[2] = restro.getNumber();
                     model.addRow(row);
                }
    }
    
     public void populateTable(){
         DefaultTableModel model = (DefaultTableModel) restaurantTable.getModel();
        
        model.setRowCount(0);
         
       
                Object[] row = new Object[3];
                //System.out.println();
                for(Restaurant restro:system.getRestaurantDirectory().getListOfRestaurants()){
                     row[0] = restro;
                     //System.out.println(restro.getAdminUName());
                     row[1] = restro.getAddress();
                     row[2] = restro.getNumber();
                     model.addRow(row);
                }
            
            
        
        
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        restaurantTable = new javax.swing.JTable();
        btnOrderFood = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pastTbl = new javax.swing.JTable();
        lblRestaurant = new javax.swing.JLabel();
        lblPastOrders = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 0, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        restaurantTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Restaurant Name", "Address", "Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(restaurantTable);
        if (restaurantTable.getColumnModel().getColumnCount() > 0) {
            restaurantTable.getColumnModel().getColumn(0).setResizable(false);
            restaurantTable.getColumnModel().getColumn(1).setResizable(false);
            restaurantTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 560, 97));

        btnOrderFood.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        btnOrderFood.setForeground(new java.awt.Color(51, 0, 51));
        btnOrderFood.setText("Order Food");
        btnOrderFood.setMaximumSize(new java.awt.Dimension(140, 30));
        btnOrderFood.setMinimumSize(new java.awt.Dimension(140, 30));
        btnOrderFood.setPreferredSize(new java.awt.Dimension(140, 30));
        btnOrderFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderFoodActionPerformed(evt);
            }
        });
        add(btnOrderFood, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 150, -1, 50));

        btnRefresh.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(51, 0, 51));
        btnRefresh.setText("Refresh");
        btnRefresh.setMaximumSize(new java.awt.Dimension(140, 30));
        btnRefresh.setMinimumSize(new java.awt.Dimension(140, 30));
        btnRefresh.setMixingCutoutShape(null);
        btnRefresh.setPreferredSize(new java.awt.Dimension(140, 30));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, 150, 50));

        enterpriseLabel.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(51, 0, 51));
        enterpriseLabel.setText("Customer:");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 110, 30));

        valueLabel.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(51, 0, 51));
        valueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 158, 26));

        pastTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order ID", "Restaurant Name", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(pastTbl);
        if (pastTbl.getColumnModel().getColumnCount() > 0) {
            pastTbl.getColumnModel().getColumn(0).setResizable(false);
            pastTbl.getColumnModel().getColumn(1).setResizable(false);
            pastTbl.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 370, 520, 97));

        lblRestaurant.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblRestaurant.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblRestaurant.setText("Restaurants");
        add(lblRestaurant, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 150, 26));

        lblPastOrders.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblPastOrders.setForeground(new java.awt.Color(51, 0, 51));
        lblPastOrders.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPastOrders.setText("Your Past Orders");
        add(lblPastOrders, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 340, 250, 26));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/chef-gdef05e9a4_1280.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 900));
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrderFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderFoodActionPerformed
        int selectedRow = restaurantTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Restaurant restaurant = (Restaurant)restaurantTable.getValueAt(selectedRow, 0);
            MenuPanel manageMenu=new MenuPanel(userProcessContainer,account,system,restaurant);
            userProcessContainer.add("Manage Restaurents",manageMenu);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnOrderFoodActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed

        pastTblPopulate();
        
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void pastTblPopulate() {
        DefaultTableModel model = (DefaultTableModel) pastTbl.getModel();
        model.setRowCount(0);
        for (Customer cust:system.getCustomerDirectory().getListOfCustomers()) {
        if (cust.getUserNameOfCustomer().equals(account.getUsername())) {
             // System.out.println(restro.getOrderList());
             for(Order menu:cust.getOrderList()){
              Object[] row = new Object[4];
              row[0] = menu;
              row[1] = menu.getNameOfRestaurant();

              row[2] = menu.getCost();
//              row[3] = menu.getStatus();
              model.addRow(row);
             }
          }   
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrderFood;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPastOrders;
    private javax.swing.JLabel lblRestaurant;
    private javax.swing.JTable pastTbl;
    private javax.swing.JTable restaurantTable;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
