/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.Car;   
import Model.FleetOfCars;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author siddharthasavant
 */
public class AdvancedSearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdvancedSearchJPanel
     */
    private JPanel rightPane;
    private FleetOfCars fleet;
    private DefaultTableModel dtm;
    
    public AdvancedSearchJPanel(JPanel rightPane, FleetOfCars fleet) {
        this.rightPane = rightPane;
        this.fleet = fleet;
        initComponents();
        populateTable();
        populateUniqueManufactureComboBox(fleet);
    }
    
    private void populateTable(){
        dtm = (DefaultTableModel) tblFleetOfCars.getModel();
        dtm.setRowCount(0);
        
        
        for(Car car: fleet.getTotalDatabase()){
            Object[] row = new Object[10];
            row[0] = car.getManufacturerName();
            row[1] = car.getCarName();
            row[2] = car.getModelName();
            row[3] = car.getYearOfManufacture();
            row[4] = car.getNumberOfSeats();
            row[5] = car.getSerialNumberOfCar();
            row[6] = car.getCompanyName();
            row[7] = car.getCityName();
            row[8] = car.isMaintainanceCertificate()?"Valid":"Expired";
            row[9] = car.isAvailability()?"Yes":"No";
            dtm.addRow(row);
        }
    }
    
    private void populateUniqueManufactureComboBox(FleetOfCars fleet){
        for(int i=0;i<fleet.size(fleet);i++){
            int flag=0;
            for(int j=0;j<i;j++){
                if(fleet.getTotalDatabase().get(i).getManufacturerName().equals(fleet.getTotalDatabase().get(j).getManufacturerName())){
                    flag=1;
                    break;
                }
            }
            if(flag==0){
                boxManufacturerName.addItem(fleet.getTotalDatabase().get(i).getManufacturerName());
            }  
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        tblFleetOfCars = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        boxManufacturerName = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        boxCarName = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        boxModelName = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        boxManufacturerYear = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        boxNumberOfSeats = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        boxCompanyName = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        boxCityName = new javax.swing.JComboBox<>();
        boxMaintainanceCertificate = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        boxAvailability = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        boxSerialNumber = new javax.swing.JComboBox<>();

        tblFleetOfCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Manufacture Name", "Car Name", "Model Name", "Year of Manufacture", "Number of Seats", "Serial Number", "Company Name", "City Name", "Maintainance Certificate", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(tblFleetOfCars);

        btnBack.setText("<-Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        boxManufacturerName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxManufacturerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxManufacturerNameActionPerformed(evt);
            }
        });

        jLabel1.setText("Manufacturer Name:");

        boxCarName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxCarName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCarNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Car Name:");

        jLabel3.setText("Model Name:");

        boxModelName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxModelName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxModelNameActionPerformed(evt);
            }
        });

        jLabel4.setText("Year of Manufacture:");

        boxManufacturerYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxManufacturerYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxManufacturerYearActionPerformed(evt);
            }
        });

        jLabel5.setText("Number of Seats:");

        boxNumberOfSeats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxNumberOfSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxNumberOfSeatsActionPerformed(evt);
            }
        });

        jLabel6.setText("Company Name:");

        boxCompanyName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxCompanyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCompanyNameActionPerformed(evt);
            }
        });

        jLabel7.setText("City Name:");

        boxCityName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxCityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCityNameActionPerformed(evt);
            }
        });

        boxMaintainanceCertificate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxMaintainanceCertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxMaintainanceCertificateActionPerformed(evt);
            }
        });

        jLabel8.setText("Maintainance Certificate:");

        boxAvailability.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxAvailabilityActionPerformed(evt);
            }
        });

        jLabel9.setText("Availability:");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Advanced Search");

        btnSearch.setBackground(new java.awt.Color(32, 37, 113));
        btnSearch.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel11.setText("Serial Number:");

        boxSerialNumber.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ALL-" }));
        boxSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxSerialNumberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(boxCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))
                                        .addGap(182, 182, 182)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(boxCityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(boxCarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(79, 79, 79)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(boxModelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boxSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(125, 125, 125)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(boxManufacturerYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(boxMaintainanceCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(228, 228, 228)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boxNumberOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(655, 655, 655))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {boxCarName, boxCompanyName, boxManufacturerName, boxManufacturerYear, boxModelName, boxNumberOfSeats, boxSerialNumber});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel7, jLabel8});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {boxAvailability, boxCityName, boxMaintainanceCertificate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(4, 4, 4)
                .addComponent(jLabel10)
                .addGap(35, 35, 35)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(boxManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(boxCarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(boxModelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(boxManufacturerYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(boxNumberOfSeats, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxCityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxMaintainanceCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel11, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {boxCarName, boxCompanyName, boxManufacturerName, boxManufacturerYear, boxModelName, boxNumberOfSeats, boxSerialNumber});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel7, jLabel8, jLabel9});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {boxAvailability, boxCityName, boxMaintainanceCertificate});

    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        SearchJPanel searchJPanel = new SearchJPanel(rightPane, fleet);        
        rightPane.add("SearchJPanel", searchJPanel);
        CardLayout layout = (CardLayout) rightPane.getLayout();
        layout.next(rightPane);
    }//GEN-LAST:event_btnBackActionPerformed

    private void boxManufacturerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxManufacturerNameActionPerformed
        // TODO add your handling code here:
        //boxCarName.removeAllItems();
        //boxCarName.addItem("-ALL-");
        String name = boxManufacturerName.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(name.equals(car.getManufacturerName())){
               boxCarName.addItem(car.getCarName());
            }
        }
    }//GEN-LAST:event_boxManufacturerNameActionPerformed

    private void boxCarNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCarNameActionPerformed
        // TODO add your handling code here:
        //boxModelName.removeAllItems();
        //boxModelName.addItem("-ALL-");
        String name = boxCarName.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(name.equals(car.getCarName())){
               boxModelName.addItem(car.getModelName());
            }
        }
    }//GEN-LAST:event_boxCarNameActionPerformed

    private void boxModelNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxModelNameActionPerformed
        // TODO add your handling code here:
        //boxManufacturerYear.removeAllItems();
        //boxManufacturerYear.addItem("-ALL-");
        String name = boxModelName.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(name.equals(car.getModelName())){
               boxManufacturerYear.addItem(Integer.toString(car.getYearOfManufacture()));
            }
        }
    }//GEN-LAST:event_boxModelNameActionPerformed

    private void boxManufacturerYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxManufacturerYearActionPerformed
        // TODO add your handling code here:
        //boxNumberOfSeats.removeAllItems();
        //boxNumberOfSeats.addItem("-ALL-");
        String name = boxManufacturerYear.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(name.equals(Integer.toString(car.getYearOfManufacture()))){
               boxNumberOfSeats.addItem(Integer.toString(car.getNumberOfSeats()));
               System.out.println("Hello"+Integer.toString(car.getNumberOfSeats()));
            }
            
            System.out.println(car.getNumberOfSeats());
        }
    }//GEN-LAST:event_boxManufacturerYearActionPerformed

    private void boxNumberOfSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxNumberOfSeatsActionPerformed
        // TODO add your handling code here:
        //boxNumberOfSeats1.removeAllItems();
        //boxNumberOfSeats1.addItem("-ALL-");
        String name = boxNumberOfSeats.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(name.equals(Integer.toString(car.getNumberOfSeats()))){
               boxSerialNumber.addItem(car.getSerialNumberOfCar());
            }
        }
    }//GEN-LAST:event_boxNumberOfSeatsActionPerformed

    private void boxCompanyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCompanyNameActionPerformed
        // TODO add your handling code here:
        //boxCityName.removeAllItems();
        //boxCityName.addItem("-ALL-");
        String name = boxCompanyName.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(name.equals(car.getCompanyName())){
               boxCityName.addItem(car.getCityName());
            }
        }
    }//GEN-LAST:event_boxCompanyNameActionPerformed

    private void boxCityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCityNameActionPerformed
        // TODO add your handling code here:
        //boxMaintainanceCertificate.removeAllItems();
        //boxMaintainanceCertificate.addItem("-ALL-");
        String name = boxCityName.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(name.equals(car.getCityName())){
                if(car.isMaintainanceCertificate()){
                    boxMaintainanceCertificate.addItem("Valid");
                }else{
                    boxMaintainanceCertificate.addItem("Expired");
                }
            }
        }
    }//GEN-LAST:event_boxCityNameActionPerformed

    private void boxMaintainanceCertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxMaintainanceCertificateActionPerformed
        // TODO add your handling code here:
        //boxAvailability.removeAllItems();
        //boxAvailability.addItem("-ALL-");
        System.out.println(boxMaintainanceCertificate.getSelectedItem().toString());
        String name = boxMaintainanceCertificate.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(name.equals(car.isMaintainanceCertificate())){
                if(car.isAvailability()){
                    boxAvailability.addItem("Yes");
                }else{
                    boxAvailability.addItem("No");
                }
            }
        }
    }//GEN-LAST:event_boxMaintainanceCertificateActionPerformed

    private void boxAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxAvailabilityActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_boxAvailabilityActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String name = boxManufacturerName.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(car.getManufacturerName().equals(name)){
                if(!boxCarName.getSelectedItem().toString().equals("-ALL-")){
                    String name1 = boxCarName.getSelectedItem().toString();
                    if(car.getCarName().equals(name1)){
                        if(!boxModelName.getSelectedItem().toString().equals("-ALL-")){
                            String name2 = boxModelName.getSelectedItem().toString();
                            if(car.getModelName().equals(name2)){
                                if(!boxManufacturerYear.getSelectedItem().toString().equals("-ALL-")){
                                    String name3 = boxManufacturerYear.getSelectedItem().toString();
                                    if(Integer.toString(car.getYearOfManufacture()).equals(name3)){
                                        if(!boxNumberOfSeats.getSelectedItem().toString().equals("-ALL-")){
                                            String name4 = boxNumberOfSeats.getSelectedItem().toString();
                                            if(Integer.toString(car.getNumberOfSeats()).equals(name4)){
                                                if(!boxSerialNumber.getSelectedItem().toString().equals("-ALL-")){
                                                    String name5 = boxNumberOfSeats.getSelectedItem().toString();
                                                    if(car.getSerialNumberOfCar().equals(name5)){
                                                        fleet.addCarToTemporaryDatabase(car);
                                                    }
                                                }
                                                fleet.addCarToTemporaryDatabase(car);
                                                
                                            }
                                        }
                                        fleet.addCarToTemporaryDatabase(car);
                                    }
                                }
                                fleet.addCarToTemporaryDatabase(car);
                            }
                        }
                        fleet.addCarToTemporaryDatabase(car);
                    }
                }
                fleet.addCarToTemporaryDatabase(car);
            }  
        }
        
        
        dtm = (DefaultTableModel) tblFleetOfCars.getModel();
        dtm.setRowCount(0);
        
        
        for(Car car: fleet.getTotalDatabase()){
            Object[] row = new Object[10];
            row[0] = car.getManufacturerName();
            row[1] = car.getCarName();
            row[2] = car.getModelName();
            row[3] = car.getYearOfManufacture();
            row[4] = car.getNumberOfSeats();
            row[5] = car.getSerialNumberOfCar();
            row[6] = car.getCompanyName();
            row[7] = car.getCityName();
            row[8] = car.isMaintainanceCertificate()?"Valid":"Expired";
            row[9] = car.isAvailability()?"Yes":"No";
            dtm.addRow(row);
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void boxSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxSerialNumberActionPerformed
        // TODO add your handling code here:
        boxCompanyName.removeAllItems();
        boxCompanyName.addItem("-ALL-");
        String name = boxSerialNumber.getSelectedItem().toString();
        for(Car car: fleet.getTotalDatabase()){
            if(name.equals(car.getSerialNumberOfCar())){
               boxCompanyName.addItem(car.getCompanyName());
            }
        }
    }//GEN-LAST:event_boxSerialNumberActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxAvailability;
    private javax.swing.JComboBox<String> boxCarName;
    private javax.swing.JComboBox<String> boxCityName;
    private javax.swing.JComboBox<String> boxCompanyName;
    private javax.swing.JComboBox<String> boxMaintainanceCertificate;
    private javax.swing.JComboBox<String> boxManufacturerName;
    private javax.swing.JComboBox<String> boxManufacturerYear;
    private javax.swing.JComboBox<String> boxModelName;
    private javax.swing.JComboBox<String> boxNumberOfSeats;
    private javax.swing.JComboBox<String> boxSerialNumber;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblFleetOfCars;
    // End of variables declaration//GEN-END:variables
}
